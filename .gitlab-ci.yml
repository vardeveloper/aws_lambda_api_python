image: registry.gitlab.ec.pe/infraestructura/docker/python36-debian

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/

before_script:
  - python -m pip install --upgrade awscli
  - aws --version
  - npm install
  - SLS_DEBUG=*

variables:
  NAMEPROJECT: profile_user

stages:
  - analysis
  - test
  - build
  - deploy


build-dev:
  stage: build
  script:
    - pip install --upgrade pip
    - npm install -g serverless@1.50.0
    - sls package --package artifacts --stage dev
  artifacts:
    when: on_success
    paths:
    - artifacts/
    expire_in: 1 week
  only:
    - develop
  tags:
    - docker

deploy-dev:
  stage: deploy
  dependencies:
    - build-dev
  script:
    - npm install -g serverless@1.50.0
    - npm install
    - sls deploy --package artifacts --stage dev
  only:
    - develop
  tags:
    - docker
    

build-master:
  stage: build
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD
    - export AWS_DEFAULT_REGION=AWS_DEFAULT_REGION_PROD
    - pip install --upgrade pip
    - npm install -g serverless@1.50.0
    - sls package --package artifacts --stage prod
  artifacts:
    when: on_success
    paths:
    - artifacts/
    expire_in: 1 week
  only:
    - master
  tags:
    - docker

deploy-master:
  stage: deploy
  dependencies:
    - build-master
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PROD
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PROD
    - export AWS_DEFAULT_REGION=AWS_DEFAULT_REGION_PROD
    - npm install -g serverless@1.50.0
    - npm install
    - sls deploy --package artifacts --stage prod
  only:
    - master
  tags:
    - docker    